# Используем официальный образ Python как базовый
# Выбираем версию Python, которую мы используем, и легковесную Debian-основу
FROM python:3.11-slim-buster

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /app

# Копируем файл зависимостей в контейнер
COPY requirements.txt .

# Устанавливаем Python-зависимости
RUN pip install --no-cache-dir -r requirements.txt

# Копируем всё содержимое вашего проекта в контейнер
# '.' означает текущую директорию хоста, а '/app' - рабочую директорию в контейнере
COPY . .

# Открываем порт, на котором будет работать Flask-приложение
EXPOSE 5000

# Определяем команду, которая будет запускаться при старте контейнера
# Здесь мы используем стандартный Flask-разработческий сервер.
# Для продакшена лучше использовать Gunicorn или Waitress.
CMD ["flask", "run", "--host=0.0.0.0"]

# Примечание по базе данных:
# Ваша база данных 'finance.db' будет находиться внутри контейнера.
# Если контейнер будет удален, база данных будет потеряна.
# Для сохранения данных в Docker используются "volumes" (тома).
# Об этом см. ниже.